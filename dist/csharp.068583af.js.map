{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.js"],"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","token","keywords","namespaceFollows","parenFollows","operators","symbols","escapes","tokenizer","root","cases","next","include","qualified","namespace","comment","string","litstring","litinterpstring","interpolatedstring","whitespace"],"mappings":"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","file":"csharp.068583af.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '<', close: '>' },\n        { open: '\\'', close: '\\'' },\n        { open: '\"', close: '\"' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.cs',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '<', close: '>', token: 'delimiter.angle' }\n    ],\n    keywords: [\n        'extern', 'alias', 'using', 'bool', 'decimal', 'sbyte', 'byte', 'short',\n        'ushort', 'int', 'uint', 'long', 'ulong', 'char', 'float', 'double',\n        'object', 'dynamic', 'string', 'assembly', 'is', 'as', 'ref',\n        'out', 'this', 'base', 'new', 'typeof', 'void', 'checked', 'unchecked',\n        'default', 'delegate', 'var', 'const', 'if', 'else', 'switch', 'case',\n        'while', 'do', 'for', 'foreach', 'in', 'break', 'continue', 'goto',\n        'return', 'throw', 'try', 'catch', 'finally', 'lock', 'yield', 'from',\n        'let', 'where', 'join', 'on', 'equals', 'into', 'orderby', 'ascending',\n        'descending', 'select', 'group', 'by', 'namespace', 'partial', 'class',\n        'field', 'event', 'method', 'param', 'property', 'public', 'protected',\n        'internal', 'private', 'abstract', 'sealed', 'static', 'struct', 'readonly',\n        'volatile', 'virtual', 'override', 'params', 'get', 'set', 'add', 'remove',\n        'operator', 'true', 'false', 'implicit', 'explicit', 'interface', 'enum',\n        'null', 'async', 'await', 'fixed', 'sizeof', 'stackalloc', 'unsafe', 'nameof',\n        'when'\n    ],\n    namespaceFollows: [\n        'namespace', 'using',\n    ],\n    parenFollows: [\n        'if', 'for', 'while', 'switch', 'foreach', 'using', 'catch', 'when'\n    ],\n    operators: [\n        '=', '??', '||', '&&', '|', '^', '&', '==', '!=', '<=', '>=', '<<',\n        '+', '-', '*', '/', '%', '!', '~', '++', '--', '+=',\n        '-=', '*=', '/=', '%=', '&=', '|=', '^=', '<<=', '>>=', '>>', '=>'\n    ],\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    // escape sequences\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/\\@?[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@namespaceFollows': { token: 'keyword.$0', next: '@namespace' },\n                        '@keywords': { token: 'keyword.$0', next: '@qualified' },\n                        '@default': { token: 'identifier', next: '@qualified' }\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // delimiters and operators\n            [/}/, {\n                    cases: {\n                        '$S2==interpolatedstring': { token: 'string.quote', next: '@pop' },\n                        '$S2==litinterpstring': { token: 'string.quote', next: '@pop' },\n                        '@default': '@brackets'\n                    }\n                }],\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@operators': 'delimiter',\n                        '@default': ''\n                    }\n                }],\n            // numbers\n            [/[0-9_]*\\.[0-9_]+([eE][\\-+]?\\d+)?[fFdD]?/, 'number.float'],\n            [/0[xX][0-9a-fA-F_]+/, 'number.hex'],\n            [/0[bB][01_]+/, 'number.hex'],\n            [/[0-9_]+/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, { token: 'string.quote', next: '@string' }],\n            [/\\$\\@\"/, { token: 'string.quote', next: '@litinterpstring' }],\n            [/\\@\"/, { token: 'string.quote', next: '@litstring' }],\n            [/\\$\"/, { token: 'string.quote', next: '@interpolatedstring' }],\n            // characters\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        qualified: [\n            [/[a-zA-Z_][\\w]*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            [/\\./, 'delimiter'],\n            ['', '', '@pop'],\n        ],\n        namespace: [\n            { include: '@whitespace' },\n            [/[A-Z]\\w*/, 'namespace'],\n            [/[\\.=]/, 'delimiter'],\n            ['', '', '@pop'],\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            // [/\\/\\*/,    'comment', '@push' ],    // no nested comments :-(\n            ['\\\\*/', 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, { token: 'string.quote', next: '@pop' }]\n        ],\n        litstring: [\n            [/[^\"]+/, 'string'],\n            [/\"\"/, 'string.escape'],\n            [/\"/, { token: 'string.quote', next: '@pop' }]\n        ],\n        litinterpstring: [\n            [/[^\"{]+/, 'string'],\n            [/\"\"/, 'string.escape'],\n            [/{{/, 'string.escape'],\n            [/}}/, 'string.escape'],\n            [/{/, { token: 'string.quote', next: 'root.litinterpstring' }],\n            [/\"/, { token: 'string.quote', next: '@pop' }]\n        ],\n        interpolatedstring: [\n            [/[^\\\\\"{]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/{{/, 'string.escape'],\n            [/}}/, 'string.escape'],\n            [/{/, { token: 'string.quote', next: 'root.interpolatedstring' }],\n            [/\"/, { token: 'string.quote', next: '@pop' }]\n        ],\n        whitespace: [\n            [/^[ \\t\\v\\f]*#((r)|(load))(?=\\s)/, 'directive.csx'],\n            [/^[ \\t\\v\\f]*#\\w.*$/, 'namespace.cpp'],\n            [/[ \\t\\v\\f\\r\\n]+/, ''],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n    },\n};\n"]}