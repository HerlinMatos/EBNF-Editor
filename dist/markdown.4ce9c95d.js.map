{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/markdown/markdown.js"],"names":["conf","comments","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","control","noncontrol","escapes","jsescapes","empty","tokenizer","root","token","next","nextEmbedded","include","codeblock","codeblockgh","linecontent","html","cases","comment","tag","switchTo","embeddedStyle","embeddedScript"],"mappings":"AAAA;;;;AAIA;;;;;;AACO,IAAIA,IAAI,GAAG;AACdC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,YAAY,EAAE,CAAC,MAAD,EAAS,KAAT;AADR,GADI;AAIdC,EAAAA,QAAQ,EAAE,CACN,CAAC,GAAD,EAAM,GAAN,CADM,EAEN,CAAC,GAAD,EAAM,GAAN,CAFM,EAGN,CAAC,GAAD,EAAM,GAAN,CAHM,CAJI;AASdC,EAAAA,gBAAgB,EAAE,CACd;AAAEC,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GADc,EAEd;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAFc,EAGd;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAHc,EAId;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE,GAApB;AAAyBC,IAAAA,KAAK,EAAE,CAAC,QAAD;AAAhC,GAJc,CATJ;AAedC,EAAAA,gBAAgB,EAAE,CACd;AAAEH,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GADc,EAEd;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAFc,EAGd;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAHc,CAfJ;AAoBdG,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE;AACLC,MAAAA,KAAK,EAAE,IAAIC,MAAJ,CAAW,+BAAX,CADF;AAELC,MAAAA,GAAG,EAAE,IAAID,MAAJ,CAAW,kCAAX;AAFA;AADJ;AApBK,CAAX;;AA2BA,IAAIE,QAAQ,GAAG;AAClBC,EAAAA,YAAY,EAAE,EADI;AAElBC,EAAAA,YAAY,EAAE,KAFI;AAGlB;AACAC,EAAAA,OAAO,EAAE,wBAJS;AAKlBC,EAAAA,UAAU,EAAE,yBALM;AAMlBC,EAAAA,OAAO,EAAE,gBANS;AAOlB;AACAC,EAAAA,SAAS,EAAE,6CARO;AASlB;AACAC,EAAAA,KAAK,EAAE,CACH,MADG,EACK,MADL,EACa,UADb,EACyB,IADzB,EAC+B,KAD/B,EACsC,OADtC,EAEH,IAFG,EAEG,KAFH,EAEU,OAFV,EAEmB,SAFnB,EAE8B,MAF9B,EAEsC,MAFtC,EAE8C,OAF9C,CAVW;AAclBC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,CACF;AACA,KAAC,+CAAD,EAAkD,CAAC,OAAD,EAAU,SAAV,EAAqB,SAArB,EAAgC,SAAhC,CAAlD,CAFE,EAGF;AACA,KAAC,kBAAD,EAAqB,SAArB,CAJE,EAKF;AACA,KAAC,qBAAD,EAAwB,gBAAxB,CANE,EAOF;AACA,KAAC,QAAD,EAAW,SAAX,CARE,EASF;AACA,KAAC,wBAAD,EAA2B,SAA3B,CAVE,EAWF;AACA,KAAC,qBAAD,EAAwB,QAAxB,CAZE,EAaF;AACA,KAAC,kCAAD,EAAqC;AAAEC,MAAAA,KAAK,EAAE,QAAT;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAArC,CAdE,EAeF;AACA,KAAC,gCAAD,EAAmC;AAAED,MAAAA,KAAK,EAAE,QAAT;AAAmBC,MAAAA,IAAI,EAAE,cAAzB;AAAyCC,MAAAA,YAAY,EAAE;AAAvD,KAAnC,CAhBE,EAiBF;AACA,KAAC,aAAD,EAAgB;AAAEF,MAAAA,KAAK,EAAE,QAAT;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAAhB,CAlBE,EAmBF;AACA;AAAEE,MAAAA,OAAO,EAAE;AAAX,KApBE,CADC;AAuBPC,IAAAA,SAAS,EAAE,CACP,CAAC,aAAD,EAAgB;AAAEJ,MAAAA,KAAK,EAAE,QAAT;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAAhB,CADO,EAEP,CAAC,aAAD,EAAgB;AAAED,MAAAA,KAAK,EAAE,QAAT;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAAhB,CAFO,EAGP,CAAC,KAAD,EAAQ,iBAAR,CAHO,CAvBJ;AA4BP;AACAI,IAAAA,WAAW,EAAE,CACT,CAAC,SAAD,EAAY;AAAEL,MAAAA,KAAK,EAAE,iBAAT;AAA4BC,MAAAA,IAAI,EAAE,MAAlC;AAA0CC,MAAAA,YAAY,EAAE;AAAxD,KAAZ,CADS,EAET,CAAC,OAAD,EAAU,iBAAV,CAFS,CA7BN;AAiCPI,IAAAA,WAAW,EAAE,CACT;AACA,KAAC,OAAD,EAAU,eAAV,CAFS,EAGT,CAAC,UAAD,EAAa,QAAb,CAHS,EAIT;AACA,KAAC,mCAAD,EAAsC,QAAtC,CALS,EAMT,CAAC,qCAAD,EAAwC,QAAxC,CANS,EAOT,CAAC,aAAD,EAAgB,UAAhB,CAPS,EAQT,CAAC,wBAAD,EAA2B,UAA3B,CARS,EAST,CAAC,sBAAD,EAAyB,UAAzB,CATS,EAUT;AACA,KAAC,aAAD,EAAgB,eAAhB,CAXS,EAYT,CAAC,6CAAD,EAAgD,CAAC,aAAD,EAAgB,EAAhB,EAAoB,aAApB,CAAhD,CAZS,EAaT,CAAC,mCAAD,EAAsC,aAAtC,CAbS,EAcT;AACA;AAAEH,MAAAA,OAAO,EAAE;AAAX,KAfS,CAjCN;AAkDP;AACA;AACA;AACA;AACA;AACAI,IAAAA,IAAI,EAAE,CACF;AACA,KAAC,WAAD,EAAc,KAAd,CAFE,EAGF,CAAC,QAAD,EAAW;AACHC,MAAAA,KAAK,EAAE;AACH,kBAAU;AAAER,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,IAAI,EAAE;AAAtB,SADP;AAEH,oBAAY;AAAED,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,IAAI,EAAE;AAAtB;AAFT;AADJ,KAAX,CAHE,EASF,CAAC,cAAD,EAAiB;AAAED,MAAAA,KAAK,EAAE;AAAT,KAAjB,CATE,EAUF,CAAC,MAAD,EAAS,SAAT,EAAoB,UAApB,CAVE,CAvDC;AAmEPS,IAAAA,OAAO,EAAE,CACL,CAAC,SAAD,EAAY,iBAAZ,CADK,EAEL,CAAC,KAAD,EAAQ,SAAR,EAAmB,MAAnB,CAFK,EAGL,CAAC,MAAD,EAAS,yBAAT,CAHK,EAIL,CAAC,OAAD,EAAU,iBAAV,CAJK,CAnEF;AAyEP;AACAC,IAAAA,GAAG,EAAE,CACD,CAAC,YAAD,EAAe,OAAf,CADC,EAED,CAAC,8BAAD,EAAiC,CAAC,qBAAD,EAAwB,gBAAxB,EAA0C,aAA1C,EACzB;AAAEV,MAAAA,KAAK,EAAE,aAAT;AAAwBW,MAAAA,QAAQ,EAAE;AAAlC,KADyB,EAEzB,aAFyB,CAAjC,CAFC,EAKD,CAAC,8BAAD,EAAiC,CAAC,qBAAD,EAAwB,gBAAxB,EAA0C,aAA1C,EACzB;AAAEX,MAAAA,KAAK,EAAE,aAAT;AAAwBW,MAAAA,QAAQ,EAAE;AAAlC,KADyB,EAEzB,aAFyB,CAAjC,CALC,EAQD,CAAC,iCAAD,EAAoC,CAAC,qBAAD,EAAwB,gBAAxB,EAA0C,aAA1C,CAApC,CARC,EASD,CAAC,KAAD,EAAQ,qBAAR,CATC,EAUD,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,CAVC,EAWD,CAAC,GAAD,EAAM;AACEH,MAAAA,KAAK,EAAE;AACH,sBAAc;AAAER,UAAAA,KAAK,EAAE,KAAT;AAAgBW,UAAAA,QAAQ,EAAE,eAA1B;AAA2CT,UAAAA,YAAY,EAAE;AAAzD,SADX;AAEH,uBAAe;AACXM,UAAAA,KAAK,EAAE;AACH,mBAAO;AAAER,cAAAA,KAAK,EAAE,KAAT;AAAgBW,cAAAA,QAAQ,EAAE,gBAA1B;AAA4CT,cAAAA,YAAY,EAAE;AAA1D,aADJ;AAEH,wBAAY;AAAEF,cAAAA,KAAK,EAAE,KAAT;AAAgBW,cAAAA,QAAQ,EAAE,gBAA1B;AAA4CT,cAAAA,YAAY,EAAE;AAA1D;AAFT;AADI,SAFZ;AAQH,oBAAY;AAAEF,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,IAAI,EAAE;AAAtB;AART;AADT,KAAN,CAXC,CA1EE;AAkGPW,IAAAA,aAAa,EAAE,CACX,CAAC,OAAD,EAAU,EAAV,CADW,EAEX,CAAC,cAAD,EAAiB;AAAEZ,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,IAAI,EAAE,MAA3B;AAAmCC,MAAAA,YAAY,EAAE;AAAjD,KAAjB,CAFW,EAGX,CAAC,GAAD,EAAM,EAAN,CAHW,CAlGR;AAuGPW,IAAAA,cAAc,EAAE,CACZ,CAAC,OAAD,EAAU,EAAV,CADY,EAEZ,CAAC,eAAD,EAAkB;AAAEb,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,IAAI,EAAE,MAA3B;AAAmCC,MAAAA,YAAY,EAAE;AAAjD,KAAlB,CAFY,EAGZ,CAAC,GAAD,EAAM,EAAN,CAHY;AAvGT;AAdO,CAAf","file":"markdown.4ce9c95d.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        blockComment: ['<!--', '-->',]\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '<', close: '>', notIn: ['string'] }\n    ],\n    surroundingPairs: [\n        { open: '(', close: ')' },\n        { open: '[', close: ']' },\n        { open: '`', close: '`' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*<!--\\\\s*#?region\\\\b.*-->\"),\n            end: new RegExp(\"^\\\\s*<!--\\\\s*#?endregion\\\\b.*-->\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.md',\n    // escape codes\n    control: /[\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n    noncontrol: /[^\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n    escapes: /\\\\(?:@control)/,\n    // escape codes for javascript/CSS strings\n    jsescapes: /\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})/,\n    // non matched elements\n    empty: [\n        'area', 'base', 'basefont', 'br', 'col', 'frame',\n        'hr', 'img', 'input', 'isindex', 'link', 'meta', 'param'\n    ],\n    tokenizer: {\n        root: [\n            // headers (with #)\n            [/^(\\s{0,3})(#+)((?:[^\\\\#]|@escapes)+)((?:#+)?)/, ['white', 'keyword', 'keyword', 'keyword']],\n            // headers (with =)\n            [/^\\s*(=+|\\-+)\\s*$/, 'keyword'],\n            // headers (with ***)\n            [/^\\s*((\\*[ ]?)+)\\s*$/, 'meta.separator'],\n            // quote\n            [/^\\s*>+/, 'comment'],\n            // list (starting with * or number)\n            [/^\\s*([\\*\\-+:]|\\d+\\.)\\s/, 'keyword'],\n            // code block (4 spaces indent)\n            [/^(\\t|[ ]{4})[^ ].*$/, 'string'],\n            // code block (3 tilde)\n            [/^\\s*~~~\\s*((?:\\w|[\\/\\-#])+)?\\s*$/, { token: 'string', next: '@codeblock' }],\n            // github style code blocks (with backticks and language)\n            [/^\\s*```\\s*((?:\\w|[\\/\\-#])+).*$/, { token: 'string', next: '@codeblockgh', nextEmbedded: '$1' }],\n            // github style code blocks (with backticks but no language)\n            [/^\\s*```\\s*$/, { token: 'string', next: '@codeblock' }],\n            // markup within lines\n            { include: '@linecontent' },\n        ],\n        codeblock: [\n            [/^\\s*~~~\\s*$/, { token: 'string', next: '@pop' }],\n            [/^\\s*```\\s*$/, { token: 'string', next: '@pop' }],\n            [/.*$/, 'variable.source'],\n        ],\n        // github style code blocks\n        codeblockgh: [\n            [/```\\s*$/, { token: 'variable.source', next: '@pop', nextEmbedded: '@pop' }],\n            [/[^`]+/, 'variable.source'],\n        ],\n        linecontent: [\n            // escapes\n            [/&\\w+;/, 'string.escape'],\n            [/@escapes/, 'escape'],\n            // various markup\n            [/\\b__([^\\\\_]|@escapes|_(?!_))+__\\b/, 'strong'],\n            [/\\*\\*([^\\\\*]|@escapes|\\*(?!\\*))+\\*\\*/, 'strong'],\n            [/\\b_[^_]+_\\b/, 'emphasis'],\n            [/\\*([^\\\\*]|@escapes)+\\*/, 'emphasis'],\n            [/`([^\\\\`]|@escapes)+`/, 'variable'],\n            // links\n            [/\\{+[^}]+\\}+/, 'string.target'],\n            [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\]\\([^\\)]+\\))/, ['string.link', '', 'string.link']],\n            [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\])/, 'string.link'],\n            // or html\n            { include: 'html' },\n        ],\n        // Note: it is tempting to rather switch to the real HTML mode instead of building our own here\n        // but currently there is a limitation in Monarch that prevents us from doing it: The opening\n        // '<' would start the HTML mode, however there is no way to jump 1 character back to let the\n        // HTML mode also tokenize the opening angle bracket. Thus, even though we could jump to HTML,\n        // we cannot correctly tokenize it in that mode yet.\n        html: [\n            // html tags\n            [/<(\\w+)\\/>/, 'tag'],\n            [/<(\\w+)/, {\n                    cases: {\n                        '@empty': { token: 'tag', next: '@tag.$1' },\n                        '@default': { token: 'tag', next: '@tag.$1' }\n                    }\n                }],\n            [/<\\/(\\w+)\\s*>/, { token: 'tag' }],\n            [/<!--/, 'comment', '@comment']\n        ],\n        comment: [\n            [/[^<\\-]+/, 'comment.content'],\n            [/-->/, 'comment', '@pop'],\n            [/<!--/, 'comment.content.invalid'],\n            [/[<\\-]/, 'comment.content']\n        ],\n        // Almost full HTML tag matching, complete with embedded scripts & styles\n        tag: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/(type)(\\s*=\\s*)(\")([^\"]+)(\")/, ['attribute.name.html', 'delimiter.html', 'string.html',\n                    { token: 'string.html', switchTo: '@tag.$S2.$4' },\n                    'string.html']],\n            [/(type)(\\s*=\\s*)(')([^']+)(')/, ['attribute.name.html', 'delimiter.html', 'string.html',\n                    { token: 'string.html', switchTo: '@tag.$S2.$4' },\n                    'string.html']],\n            [/(\\w+)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, ['attribute.name.html', 'delimiter.html', 'string.html']],\n            [/\\w+/, 'attribute.name.html'],\n            [/\\/>/, 'tag', '@pop'],\n            [/>/, {\n                    cases: {\n                        '$S2==style': { token: 'tag', switchTo: 'embeddedStyle', nextEmbedded: 'text/css' },\n                        '$S2==script': {\n                            cases: {\n                                '$S3': { token: 'tag', switchTo: 'embeddedScript', nextEmbedded: '$S3' },\n                                '@default': { token: 'tag', switchTo: 'embeddedScript', nextEmbedded: 'text/javascript' }\n                            }\n                        },\n                        '@default': { token: 'tag', next: '@pop' }\n                    }\n                }],\n        ],\n        embeddedStyle: [\n            [/[^<]+/, ''],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\n            [/</, '']\n        ],\n        embeddedScript: [\n            [/[^<]+/, ''],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\n            [/</, '']\n        ],\n    }\n};\n"]}