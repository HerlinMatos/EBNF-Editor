{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/pascal/pascal.js"],"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","ignoreCase","token","keywords","typeKeywords","operators","symbols","tokenizer","root","cases","include","comment","string","bracket","next","whitespace"],"mappings":"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","file":"pascal.ab80b584.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    // the default separators except `@$`\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['{', '}'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n        ['<', '>'],\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '<', close: '>' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '<', close: '>' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*\\\\{\\\\$REGION(\\\\s\\\\'.*\\\\')?\\\\}\"),\n            end: new RegExp(\"^\\\\s*\\\\{\\\\$ENDREGION\\\\}\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.pascal',\n    ignoreCase: true,\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '<', close: '>', token: 'delimiter.angle' }\n    ],\n    keywords: [\n        'absolute', 'abstract', 'all', 'and_then', 'array', 'as', 'asm',\n        'attribute', 'begin', 'bindable', 'case', 'class', 'const',\n        'contains', 'default', 'div', 'else', 'end', 'except',\n        'exports', 'external', 'far', 'file', 'finalization', 'finally',\n        'forward', 'generic', 'goto', 'if', 'implements', 'import', 'in',\n        'index', 'inherited', 'initialization', 'interrupt', 'is', 'label',\n        'library', 'mod', 'module', 'name', 'near', 'not', 'object', 'of',\n        'on', 'only', 'operator', 'or_else', 'otherwise', 'override',\n        'package', 'packed', 'pow', 'private', 'program', 'protected',\n        'public', 'published', 'interface', 'implementation', 'qualified',\n        'read', 'record', 'resident', 'requires', 'resourcestring',\n        'restricted', 'segment', 'set', 'shl', 'shr', 'specialize', 'stored',\n        'then', 'threadvar', 'to', 'try', 'type', 'unit', 'uses', 'var',\n        'view', 'virtual', 'dynamic', 'overload', 'reintroduce', 'with',\n        'write', 'xor', 'true', 'false', 'procedure', 'function',\n        'constructor', 'destructor', 'property', 'break', 'continue', 'exit',\n        'abort', 'while', 'do', 'for', 'raise', 'repeat', 'until'\n    ],\n    typeKeywords: [\n        'boolean', 'double', 'byte', 'integer', 'shortint', 'char',\n        'longint', 'float', 'string'\n    ],\n    operators: [\n        '=', '>', '<', '<=', '>=', '<>', ':', ':=', 'and', 'or',\n        '+', '-', '*', '/', '@', '&', '^', '%'\n    ],\n    // we include these common regular expressions\n    symbols: /[=><:@\\^&|+\\-*\\/\\^%]+/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/[a-zA-Z_][\\w]*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@operators': 'delimiter',\n                        '@default': ''\n                    }\n                }],\n            // numbers\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/\\$[0-9a-fA-F]{1,16}/, 'number.hex'],\n            [/\\d+/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/'/, 'string', '@string'],\n            // characters\n            [/'[^\\\\']'/, 'string'],\n            [/'/, 'string.invalid'],\n            [/\\#\\d+/, 'string']\n        ],\n        comment: [\n            [/[^\\*\\}]+/, 'comment'],\n            //[/\\(\\*/,    'comment', '@push' ],    // nested comment  not allowed :-(\n            [/\\}/, 'comment', '@pop'],\n            [/[\\{]/, 'comment']\n        ],\n        string: [\n            [/[^\\\\']+/, 'string'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/'/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/\\{/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n    },\n};\n"]}