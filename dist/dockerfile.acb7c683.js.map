{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.js"],"names":["conf","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","variable","tokenizer","root","include","token","next","arguments","cases","whitespace","comment","strings","stringBody","dblStringBody"],"mappings":"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","file":"dockerfile.acb7c683.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.dockerfile',\n    variable: /\\${?[\\w]+}?/,\n    tokenizer: {\n        root: [\n            { include: '@whitespace' },\n            { include: '@comment' },\n            [/(ONBUILD)(\\s+)/, ['keyword', '']],\n            [/(ENV)(\\s+)([\\w]+)/, ['keyword', '', { token: 'variable', next: '@arguments' }]],\n            [/(FROM|MAINTAINER|RUN|EXPOSE|ENV|ADD|ARG|VOLUME|LABEL|USER|WORKDIR|COPY|CMD|STOPSIGNAL|SHELL|HEALTHCHECK|ENTRYPOINT)/, { token: 'keyword', next: '@arguments' }]\n        ],\n        arguments: [\n            { include: '@whitespace' },\n            { include: '@strings' },\n            [/(@variable)/, {\n                    cases: {\n                        '@eos': { token: 'variable', next: '@popall' },\n                        '@default': 'variable'\n                    }\n                }],\n            [/\\\\/, {\n                    cases: {\n                        '@eos': '',\n                        '@default': ''\n                    }\n                }],\n            [/./, {\n                    cases: {\n                        '@eos': { token: '', next: '@popall' },\n                        '@default': ''\n                    }\n                }],\n        ],\n        // Deal with white space, including comments\n        whitespace: [\n            [/\\s+/, {\n                    cases: {\n                        '@eos': { token: '', next: '@popall' },\n                        '@default': ''\n                    }\n                }],\n        ],\n        comment: [\n            [/(^#.*$)/, 'comment', '@popall']\n        ],\n        // Recognize strings, including those broken across lines with \\ (but not without)\n        strings: [\n            [/'$/, 'string', '@popall'],\n            [/'/, 'string', '@stringBody'],\n            [/\"$/, 'string', '@popall'],\n            [/\"/, 'string', '@dblStringBody']\n        ],\n        stringBody: [\n            [/[^\\\\\\$']/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/\\\\./, 'string.escape'],\n            [/'$/, 'string', '@popall'],\n            [/'/, 'string', '@pop'],\n            [/(@variable)/, 'variable'],\n            [/\\\\$/, 'string'],\n            [/$/, 'string', '@popall']\n        ],\n        dblStringBody: [\n            [/[^\\\\\\$\"]/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/\\\\./, 'string.escape'],\n            [/\"$/, 'string', '@popall'],\n            [/\"/, 'string', '@pop'],\n            [/(@variable)/, 'variable'],\n            [/\\\\$/, 'string'],\n            [/$/, 'string', '@popall']\n        ]\n    }\n};\n"]}