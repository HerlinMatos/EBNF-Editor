{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/scss/scss.js"],"names":["conf","wordPattern","comments","blockComment","lineComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","ws","identifier","token","tokenizer","root","include","selector","next","selectorbody","selectorname","selectorattribute","term","rulevalue","switchTo","nestedproperty","warndebug","import","variabledeclaration","urldeclaration","parenthizedterm","declarationbody","extendbody","variablereference","variableinterpolation","comment","name","numbers","units","functiondeclaration","mixindeclaration","parameterdeclaration","includedeclaration","keyframedeclaration","keyframebody","controlstatement","controlstatementdeclaration","functionbody","functioninvocation","functionarguments","strings","stringenddoublequote","stringendquote"],"mappings":"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","file":"scss.316a4223.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@$#!.:]?[\\w-?]+%?)|[@#!.]/g,\n    comments: {\n        blockComment: ['/*', '*/'],\n        lineComment: '//'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\n            end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.scss',\n    ws: '[ \\t\\n\\r\\f]*',\n    identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.bracket' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '<', close: '>', token: 'delimiter.angle' }\n    ],\n    tokenizer: {\n        root: [\n            { include: '@selector' },\n        ],\n        selector: [\n            { include: '@comments' },\n            { include: '@import' },\n            { include: '@variabledeclaration' },\n            { include: '@warndebug' },\n            ['[@](include)', { token: 'keyword', next: '@includedeclaration' }],\n            ['[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)', { token: 'keyword', next: '@keyframedeclaration' }],\n            ['[@](page|content|font-face|-moz-document)', { token: 'keyword' }],\n            ['[@](charset|namespace)', { token: 'keyword', next: '@declarationbody' }],\n            ['[@](function)', { token: 'keyword', next: '@functiondeclaration' }],\n            ['[@](mixin)', { token: 'keyword', next: '@mixindeclaration' }],\n            ['url(\\\\-prefix)?\\\\(', { token: 'meta', next: '@urldeclaration' }],\n            { include: '@controlstatement' },\n            { include: '@selectorname' },\n            ['[&\\\\*]', 'tag'],\n            ['[>\\\\+,]', 'delimiter'],\n            ['\\\\[', { token: 'delimiter.bracket', next: '@selectorattribute' }],\n            ['{', { token: 'delimiter.curly', next: '@selectorbody' }],\n        ],\n        selectorbody: [\n            ['[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))', 'attribute.name', '@rulevalue'],\n            { include: '@selector' },\n            ['[@](extend)', { token: 'keyword', next: '@extendbody' }],\n            ['[@](return)', { token: 'keyword', next: '@declarationbody' }],\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\n        ],\n        selectorname: [\n            ['#{', { token: 'meta', next: '@variableinterpolation' }],\n            ['(\\\\.|#(?=[^{])|%|(@identifier)|:)+', 'tag'],\n        ],\n        selectorattribute: [\n            { include: '@term' },\n            [']', { token: 'delimiter.bracket', next: '@pop' }],\n        ],\n        term: [\n            { include: '@comments' },\n            ['url(\\\\-prefix)?\\\\(', { token: 'meta', next: '@urldeclaration' }],\n            { include: '@functioninvocation' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            { include: '@variablereference' },\n            ['(and\\\\b|or\\\\b|not\\\\b)', 'operator'],\n            { include: '@name' },\n            ['([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])', 'operator'],\n            [',', 'delimiter'],\n            ['!default', 'literal'],\n            ['\\\\(', { token: 'delimiter.parenthesis', next: '@parenthizedterm' }],\n        ],\n        rulevalue: [\n            { include: '@term' },\n            ['!important', 'literal'],\n            [';', 'delimiter', '@pop'],\n            ['{', { token: 'delimiter.curly', switchTo: '@nestedproperty' }],\n            ['(?=})', { token: '', next: '@pop' }],\n        ],\n        nestedproperty: [\n            ['[*_]?@identifier@ws:', 'attribute.name', '@rulevalue'],\n            { include: '@comments' },\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\n        ],\n        warndebug: [\n            ['[@](warn|debug)', { token: 'keyword', next: '@declarationbody' }],\n        ],\n        import: [\n            ['[@](import)', { token: 'keyword', next: '@declarationbody' }],\n        ],\n        variabledeclaration: [\n            ['\\\\$@identifier@ws:', 'variable.decl', '@declarationbody'],\n        ],\n        urldeclaration: [\n            { include: '@strings' },\n            ['[^)\\r\\n]+', 'string'],\n            ['\\\\)', { token: 'meta', next: '@pop' }],\n        ],\n        parenthizedterm: [\n            { include: '@term' },\n            ['\\\\)', { token: 'delimiter.parenthesis', next: '@pop' }],\n        ],\n        declarationbody: [\n            { include: '@term' },\n            [';', 'delimiter', '@pop'],\n            ['(?=})', { token: '', next: '@pop' }],\n        ],\n        extendbody: [\n            { include: '@selectorname' },\n            ['!optional', 'literal'],\n            [';', 'delimiter', '@pop'],\n            ['(?=})', { token: '', next: '@pop' }],\n        ],\n        variablereference: [\n            ['\\\\$@identifier', 'variable.ref'],\n            ['\\\\.\\\\.\\\\.', 'operator'],\n            ['#{', { token: 'meta', next: '@variableinterpolation' }],\n        ],\n        variableinterpolation: [\n            { include: '@variablereference' },\n            ['}', { token: 'meta', next: '@pop' }],\n        ],\n        comments: [\n            ['\\\\/\\\\*', 'comment', '@comment'],\n            ['\\\\/\\\\/+.*', 'comment'],\n        ],\n        comment: [\n            ['\\\\*\\\\/', 'comment', '@pop'],\n            ['.', 'comment'],\n        ],\n        name: [\n            ['@identifier', 'attribute.value'],\n        ],\n        numbers: [\n            ['(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', { token: 'number', next: '@units' }],\n            ['#[0-9a-fA-F_]+(?!\\\\w)', 'number.hex'],\n        ],\n        units: [\n            ['(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?', 'number', '@pop']\n        ],\n        functiondeclaration: [\n            ['@identifier@ws\\\\(', { token: 'meta', next: '@parameterdeclaration' }],\n            ['{', { token: 'delimiter.curly', switchTo: '@functionbody' }],\n        ],\n        mixindeclaration: [\n            // mixin with parameters\n            ['@identifier@ws\\\\(', { token: 'meta', next: '@parameterdeclaration' }],\n            // mixin without parameters\n            ['@identifier', 'meta'],\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }],\n        ],\n        parameterdeclaration: [\n            ['\\\\$@identifier@ws:', 'variable.decl'],\n            ['\\\\.\\\\.\\\\.', 'operator'],\n            [',', 'delimiter'],\n            { include: '@term' },\n            ['\\\\)', { token: 'meta', next: '@pop' }],\n        ],\n        includedeclaration: [\n            { include: '@functioninvocation' },\n            ['@identifier', 'meta'],\n            [';', 'delimiter', '@pop'],\n            ['(?=})', { token: '', next: '@pop' }],\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }],\n        ],\n        keyframedeclaration: [\n            ['@identifier', 'meta'],\n            ['{', { token: 'delimiter.curly', switchTo: '@keyframebody' }],\n        ],\n        keyframebody: [\n            { include: '@term' },\n            ['{', { token: 'delimiter.curly', next: '@selectorbody' }],\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\n        ],\n        controlstatement: [\n            ['[@](if|else|for|while|each|media)', { token: 'keyword.flow', next: '@controlstatementdeclaration' }],\n        ],\n        controlstatementdeclaration: [\n            ['(in|from|through|if|to)\\\\b', { token: 'keyword.flow' }],\n            { include: '@term' },\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }],\n        ],\n        functionbody: [\n            ['[@](return)', { token: 'keyword' }],\n            { include: '@variabledeclaration' },\n            { include: '@term' },\n            { include: '@controlstatement' },\n            [';', 'delimiter'],\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\n        ],\n        functioninvocation: [\n            ['@identifier\\\\(', { token: 'meta', next: '@functionarguments' }],\n        ],\n        functionarguments: [\n            ['\\\\$@identifier@ws:', 'attribute.name'],\n            ['[,]', 'delimiter'],\n            { include: '@term' },\n            ['\\\\)', { token: 'meta', next: '@pop' }],\n        ],\n        strings: [\n            ['~?\"', { token: 'string.delimiter', next: '@stringenddoublequote' }],\n            ['~?\\'', { token: 'string.delimiter', next: '@stringendquote' }]\n        ],\n        stringenddoublequote: [\n            ['\\\\\\\\.', 'string'],\n            ['\"', { token: 'string.delimiter', next: '@pop' }],\n            ['.', 'string']\n        ],\n        stringendquote: [\n            ['\\\\\\\\.', 'string'],\n            ['\\'', { token: 'string.delimiter', next: '@pop' }],\n            ['.', 'string']\n        ]\n    }\n};\n"]}