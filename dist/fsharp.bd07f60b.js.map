{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/fsharp/fsharp.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","keywords","symbols","escapes","integersuffix","floatsuffix","tokenizer","root","cases","token","include","next","whitespace","comment","string","litstring"],"mappings":"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","file":"fsharp.bd07f60b.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['(*', '*)'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*//\\\\s*#region\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#region(.*)\\\\*\\\\)\"),\n            end: new RegExp(\"^\\\\s*//\\\\s*#endregion\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#endregion\\\\s*\\\\*\\\\)\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.fs',\n    keywords: [\n        'abstract', 'and', 'atomic', 'as',\n        'assert', 'asr', 'base', 'begin',\n        'break', 'checked', 'component',\n        'const', 'constraint', 'constructor',\n        'continue', 'class', 'default',\n        'delegate', 'do', 'done', 'downcast',\n        'downto', 'elif', 'else', 'end',\n        'exception', 'eager', 'event', 'external',\n        'extern', 'false', 'finally', 'for',\n        'fun', 'function', 'fixed', 'functor',\n        'global', 'if', 'in', 'include', 'inherit',\n        'inline', 'interface', 'internal', 'land',\n        'lor', 'lsl', 'lsr', 'lxor', 'lazy', 'let',\n        'match', 'member', 'mod', 'module', 'mutable',\n        'namespace', 'method', 'mixin', 'new', 'not',\n        'null', 'of', 'open', 'or', 'object',\n        'override', 'private', 'parallel', 'process',\n        'protected', 'pure', 'public', 'rec', 'return',\n        'static', 'sealed', 'struct', 'sig', 'then',\n        'to', 'true', 'tailcall', 'trait',\n        'try', 'type', 'upcast', 'use',\n        'val', 'void', 'virtual', 'volatile',\n        'when', 'while', 'with', 'yield'\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\^%;\\.,\\/]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    integersuffix: /[uU]?[yslnLI]?/,\n    floatsuffix: /[fFmM]?/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // [< attributes >].\n            [/\\[<.*>\\]/, 'annotation'],\n            // Preprocessor directive\n            [/^#(if|else|endif)/, 'keyword'],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n            [/0x[0-9a-fA-F]+LF/, 'number.float'],\n            [/0x[0-9a-fA-F]+(@integersuffix)/, 'number.hex'],\n            [/0b[0-1]+(@integersuffix)/, 'number.bin'],\n            [/\\d+(@integersuffix)/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"\"\"/, 'string', '@string.\"\"\"'],\n            [/\"/, 'string', '@string.\"'],\n            // literal string\n            [/\\@\"/, { token: 'string.quote', next: '@litstring' }],\n            // characters\n            [/'[^\\\\']'B?/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/\\(\\*(?!\\))/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^*(]+/, 'comment'],\n            [/\\*\\)/, 'comment', '@pop'],\n            [/\\*/, 'comment'],\n            [/\\(\\*\\)/, 'comment'],\n            [/\\(/, 'comment']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/(\"\"\"|\"B?)/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }]\n        ],\n        litstring: [\n            [/[^\"]+/, 'string'],\n            [/\"\"/, 'string.escape'],\n            [/\"/, { token: 'string.quote', next: '@pop' }]\n        ],\n    },\n};\n"]}