{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.js"],"names":["conf","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","ignoreCase","qualifiedName","tokenizer","root","include","token","next","cdata","tag","whitespace","comment"],"mappings":"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","file":"xml.a70dac16.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        blockComment: ['<!--', '-->'],\n    },\n    brackets: [\n        ['<', '>']\n    ],\n    autoClosingPairs: [\n        { open: '<', close: '>' },\n        { open: '\\'', close: '\\'' },\n        { open: '\"', close: '\"' },\n    ],\n    surroundingPairs: [\n        { open: '<', close: '>' },\n        { open: '\\'', close: '\\'' },\n        { open: '\"', close: '\"' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.xml',\n    ignoreCase: true,\n    // Useful regular expressions\n    qualifiedName: /(?:[\\w\\.\\-]+:)?[\\w\\.\\-]+/,\n    tokenizer: {\n        root: [\n            [/[^<&]+/, ''],\n            { include: '@whitespace' },\n            // Standard opening tag\n            [/(<)(@qualifiedName)/, [\n                    { token: 'delimiter' },\n                    { token: 'tag', next: '@tag' }\n                ]],\n            // Standard closing tag\n            [/(<\\/)(@qualifiedName)(\\s*)(>)/, [\n                    { token: 'delimiter' },\n                    { token: 'tag' },\n                    '',\n                    { token: 'delimiter' }\n                ]],\n            // Meta tags - instruction\n            [/(<\\?)(@qualifiedName)/, [\n                    { token: 'delimiter' },\n                    { token: 'metatag', next: '@tag' }\n                ]],\n            // Meta tags - declaration\n            [/(<\\!)(@qualifiedName)/, [\n                    { token: 'delimiter' },\n                    { token: 'metatag', next: '@tag' }\n                ]],\n            // CDATA\n            [/<\\!\\[CDATA\\[/, { token: 'delimiter.cdata', next: '@cdata' }],\n            [/&\\w+;/, 'string.escape'],\n        ],\n        cdata: [\n            [/[^\\]]+/, ''],\n            [/\\]\\]>/, { token: 'delimiter.cdata', next: '@pop' }],\n            [/\\]/, '']\n        ],\n        tag: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/(@qualifiedName)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, ['attribute.name', '', 'attribute.value']],\n            [/(@qualifiedName)(\\s*=\\s*)(\"[^\">?\\/]*|'[^'>?\\/]*)(?=[\\?\\/]\\>)/, ['attribute.name', '', 'attribute.value']],\n            [/(@qualifiedName)(\\s*=\\s*)(\"[^\">]*|'[^'>]*)/, ['attribute.name', '', 'attribute.value']],\n            [/@qualifiedName/, 'attribute.name'],\n            [/\\?>/, { token: 'delimiter', next: '@pop' }],\n            [/(\\/)(>)/, [\n                    { token: 'tag' },\n                    { token: 'delimiter', next: '@pop' }\n                ]],\n            [/>/, { token: 'delimiter', next: '@pop' }],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/<!--/, { token: 'comment', next: '@comment' }]\n        ],\n        comment: [\n            [/[^<\\-]+/, 'comment.content'],\n            [/-->/, { token: 'comment', next: '@pop' }],\n            [/<!--/, 'comment.content.invalid'],\n            [/[<\\-]/, 'comment.content']\n        ],\n    },\n};\n"]}